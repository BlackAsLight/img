{
  "workspace": ["internal", "localhost", "png", "qoi"],
  "imports": {
    "@luca/esbuild-deno-loader": "jsr:@luca/esbuild-deno-loader@^0.11.1",
    "@std/assert": "jsr:@std/assert@1",
    "@std/bytes": "jsr:@std/bytes@1",
    "@std/media-types": "jsr:@std/media-types@1",
    "@std/path": "jsr:@std/path@1",
    "@std/streams": "jsr:@std/streams@1",
    "esbuild": "npm:esbuild@^0.25.0"
  },
  "exclude": ["**/.*"],
  "tasks": {
    "bench": "deno bench _benchmark.ts",
    "cov": "deno task test --reporter=dot --coverage-raw-data-only --coverage='.coverage/' --clean && deno coverage --html .coverage/",
    "cov:mac": "deno task cov && open .coverage/html/index.html",
    "cov:lin": "deno task cov && xdg-open .coverage/html/index.html",
    "cov:win": "deno task cov && start .coverage/html/index.html",
    "doc": "deno doc --html --output='.docs/'",
    "doc:png": "deno task doc png/mod.ts",
    "doc:qoi": "deno task doc qoi/mod.ts",
    "doc:mac": "open .docs/index.html",
    "doc:lin": "xdg-open .docs/index.html",
    "doc:win": "start .docs/index.html",
    "test": "deno test -R='.output/' -W='.output/' --parallel --trace-leaks",
    "lint": "deno lint",
    "fmt": "deno fmt",
    "ok": {
      "command": "deno task test --doc",
      "dependencies": ["fmt", "lint"]
    },
    "build": "deno run -W='localhost/static/' -RE --allow-run localhost/build.ts",
    "local": {
      "command": "deno run -RN localhost/server.ts",
      "dependencies": ["build"]
    },
    "remote": {
      "command": "mkdir -p localhost/static/coverage/ && mv .coverage/html/* localhost/static/coverage/",
      "dependencies": ["build", "cov"]
    }
  },
  "lint": {
    "rules": {
      "tags": ["recommended"],
      "include": [
        "camelcase",
        "explicit-function-return-type",
        "explicit-module-boundary-types",
        "no-console",
        "no-eval",
        "no-inferrable-types",
        "no-sparse-arrays",
        "no-sync-fn-in-async-fn",
        "no-throw-literal",
        "no-undef",
        "prefer-ascii",
        "single-var-declarator",
        "verbatim-module-syntax"
      ]
    }
  }
}
